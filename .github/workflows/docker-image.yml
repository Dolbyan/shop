name: Docker Image CI/CD

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Minikube
      uses: medyagh/setup-minikube@master
      with:
        minikube-version: 1.34.0
        kubernetes-version: v1.27.3
        driver: docker

    - name: Configure Kubernetes Context
      run: |
        kubectl config set-context minikube
        kubectl config use-context minikube

    - name: Build images
      run: |
        eval $(minikube docker-env)
        docker build -t admin-app:latest -f ./admin_app/Dockerfile .
        docker build -t user-app:latest -f ./ecomm/Dockerfile .
        docker build -t kafka-consumer:latest -f ./Dockerfile .

    - name: Create namespace
      run: |
        kubectl create namespace app-system --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy PostgreSQL
      run: |
        # Upewnij się, że masz plik postgres-deployment.yaml
        kubectl apply -f postgres-deployment.yaml -n app-system
        kubectl wait --for=condition=ready pod -l app=postgres-admin -n app-system

    - name: Deploy Kafka and Zookeeper
      run: |
        kubectl apply -f kafka-deployment.yaml -n app-system
        kubectl wait --for=condition=ready pod -l app=kafka -n app-system
        kubectl wait --for=condition=ready pod -l app=zookeeper -n app-system

    - name: Configure Database Secrets
      run: |
        kubectl create secret generic postgres-admin-secret \
          --from-literal=POSTGRES_DB=admin_db \
          --from-literal=POSTGRES_USER=admin \
          --from-literal=POSTGRES_PASSWORD=admin_password \
          -n app-system

    - name: Deploy Admin App
      run: |
        # Zaktualizuj deployment o zmienne środowiskowe
        cat > admin_app/admin-deployment.yaml << EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: admin-main-app
          namespace: app-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: admin-main-app
          template:
            metadata:
              labels:
                app: admin-main-app
            spec:
              containers:
              - name: admin-main-app
                image: admin-app:latest
                env:
                - name: DATABASE_HOST
                  value: postgres-admin-service.app-system.svc.cluster.local
                - name: DATABASE_PORT
                  value: "5432"
                - name: POSTGRES_DB
                  valueFrom:
                    secretKeyRef:
                      name: postgres-admin-secret
                      key: POSTGRES_DB
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: postgres-admin-secret
                      key: POSTGRES_USER
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgres-admin-secret
                      key: POSTGRES_PASSWORD
        EOF
        
        kubectl apply -f admin_app/admin-deployment.yaml

    - name: Deploy Other Services
      run: |
        kubectl apply -f kafka-consumer-deployment.yaml -n app-system
        kubectl apply -f ecomm/user-deployment.yaml -n app-system

    - name: Verify Deployment
      run: |
        kubectl get pods -n app-system
        kubectl get services -n app-system