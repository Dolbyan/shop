name: Local Minikube Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  KUBECONFIG: ${{ secrets.KUBECONFIG }}
  MINIKUBE_IP: ${{ secrets.MINIKUBE_IP }}

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Kubernetes Context
      run: |
        New-Item -Path $HOME\.kube -ItemType Directory -Force
        [IO.File]::WriteAllBytes("$HOME\.kube\config", [Convert]::FromBase64String($Env:KUBECONFIG_BASE64))
        kubectl config view
        kubectl cluster-info
      env:
        KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG }}

    - name: Setup Minikube Context
      run: |
        minikube status
        kubectl config use-context minikube

    - name: Build Docker Images
      run: |
        docker build -t admin-app:latest -f ./admin_app/Dockerfile .
        docker build -t user-app:latest -f ./ecomm/Dockerfile .
        docker build -t kafka-consumer:latest -f ./Dockerfile .

    - name: Deploy to Minikube
      run: |
        kubectl apply -f postgres-pvc.yaml -n app-system
        kubectl apply -f ./admin_app/postgres-admin-deployment.yaml -n app-system
        kubectl apply -f ./ecomm/postgres-user-deployment.yaml -n app-system
        kubectl apply -f kafka-deployment.yaml -n app-system
        kubectl apply -f kafka-consumer-deployment.yaml -n app-system
        kubectl apply -f admin_app/admin-deployment.yaml -n app-system
        kubectl apply -f ecomm/user-deployment.yaml -n app-system

    - name: Verify Deployment
      run: |
        kubectl get pods -n app-system -w
        kubectl get svc -n app-system