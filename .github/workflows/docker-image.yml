name: Docker Image CI/CD

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Minikube
      uses: medyagh/setup-minikube@master
      with:
        minikube-version: 1.34.0
        kubernetes-version: v1.31.0
        driver: docker

    - name: Get minikube status
      run: |
        minikube status
        kubectl get nodes


    - name: Build images
      run: |
        eval $(minikube docker-env)
        docker build -t admin-app:latest -f ./admin_app/Dockerfile .
        docker build -t user-app:latest -f ./ecomm/Dockerfile .
        docker build -t kafka-consumer:latest -f ./Dockerfile .

    - name: Enable Ingress
      run: |
        minikube addons enable ingress

    - name: Deploy to Minikube
      run: |
        # Tworzenie namespace
        kubectl create namespace app-system --dry-run=client -o yaml | kubectl apply -f -
        
        # Aplikowanie konfiguracji
        kubectl apply -f kafka-deployment.yaml -n app-system
        kubectl apply -f kafka-consumer-deployment.yaml -n app-system
        kubectl apply -f admin_app/admin-deployment.yaml -n app-system
        kubectl apply -f ecomm/user-deployment.yaml -n app-system
        
        # Aktualizacja deployment√≥w
        kubectl set image deployment/admin-main-app admin-main-app=admin-app:latest -n app-system
        kubectl set image deployment/user-main-app user-main-app=user-app:latest -n app-system
        kubectl set image deployment/kafka-consumer kafka-consumer=kafka-consumer:latest -n app-system

        - name: Verify deployment
          run: |
            kubectl get pods -n app-system
            kubectl get services -n app-system
            kubectl get ingress -n app-system

        - name: Show app URL
          run: |
            minikube service list -n app-system
            echo "Minikube IP: $(minikube ip)"