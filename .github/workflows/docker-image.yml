name: Docker Image CI/CD

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Log in to Google Container Registry
      run: |
        gcloud auth configure-docker europe-central2-docker.pkg.dev
        gcloud auth configure-docker gcr.io

    - name: Build and push admin app
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./admin_app/Dockerfile
        push: true
        tags: |
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/admin-app-image:latest
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/admin-app-image:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push user app
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./ecomm/Dockerfile
        push: true
        tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-app-image:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push kafka consumer
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/kafka-consumer-image:latest
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/kafka-consumer-image:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Create SSL certificates secret
      run: |
        # Pobierz certyfikaty z Cloud SQL
        gcloud sql instances describe admin-app --format='get(serverCaCert.cert)' > server-ca.pem
        gcloud sql instances generate-client-cert admin-app --output-cert-file=client-cert.pem --output-key-file=client-key.pem

        # UtwÃ³rz secret z certyfikatami
        kubectl create secret generic sql-certs \
          --from-file=server-ca.pem \
          --from-file=client-cert.pem \
          --from-file=client-key.pem \
          --dry-run=client -o yaml | kubectl apply -f -
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        token_format: 'access_token'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin,kubectl'

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials cluster-1 --zone europe-central2-a --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Create GCP credentials secret in Kubernetes
      run: |
        echo '${{ secrets.GCP_CREDENTIALS }}' > credentials.json
        kubectl create secret generic gcp-credentials --from-file=credentials.json -o yaml --dry-run=client | kubectl apply -f -
        rm credentials.json

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f kafka-deployment.yaml
        sleep 30
        kubectl apply -f admin_app/admin-deployment.yaml
        kubectl apply -f ecomm/user-deployment.yaml
        kubectl apply -f kafka-consumer-deployment.yaml

    - name: Update deployment images
      run: |
        kubectl set image deployment/admin-main-app admin-main-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/admin-app-image:latest
        kubectl set image deployment/user-main-app user-main-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-app-image:latest
        kubectl set image deployment/kafka-consumer kafka-consumer=gcr.io/${{ secrets.GCP_PROJECT_ID }}/kafka-consumer-image:latest

    - name: Verify deployments
      run: |
        kubectl rollout status deployment/admin-main-app
        kubectl rollout status deployment/user-main-app
        kubectl rollout status deployment/kafka-consumer

    - name: Show deployment status
      run: |
        echo "Current deployment status:"
        kubectl get deployments
        echo "Current pods status:"
        kubectl get pods